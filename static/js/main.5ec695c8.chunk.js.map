{"version":3,"sources":["container/MainContainer.js","component/Pixabay.js","component/MyCollection.js","store/modules/actions/action.js","store/modules/pixabay.js","store/modules/mycollection.js","container/PixabayContainer.js","App.js","store/modules/index.js","index.js"],"names":["MainContainer","title","this","props","className","children","Component","Pixabay","pixabayList","onSelectedPicture","Container","Row","hits","map","el","index","Col","sm","key","src","largeImageURL","alt","Button","variant","onClick","id","aria-hidden","MyCollection","myCollection","url","GET_PICTURES","SELECTED_PICTURES","getPictures","content","APIKey","dispatch","paramContent","paramAPIKey","axios","get","then","res","type","payload","data","catch","err","console","log","initialMyCollection","PixabayContainer","onSelectedSearch","setSearch","e","setState","search","target","value","keyPress","state","selectedPic","selectedId","selectedPictures","toggleChange","toggleContext","toggle","bind","newMyCollection","filter","xs","style","visibility","name","onChange","onKeyPress","autoComplete","required","htmlFor","length","connect","pixabayReducer","pixabayMyCollectionReducer","App","combineReducers","action","repeatedFlag","i","concat","store","createStore","rootReducer","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ec695c8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './MainContainer.scss';\r\n\r\nexport default class MainContainer extends Component{\r\n    render(){\r\n\r\n        const { title } = this.props;\r\n        // title came from PixabayContainer Component\r\n\r\n        return(\r\n            <div className=\"maincontainer\">\r\n                <p className=\"title\">{title}</p>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport './style.scss';\r\n\r\nexport default class Pixabay extends Component{\r\n\r\n    render(){\r\n\r\n        const { pixabayList, onSelectedPicture } = this.props;\r\n        // pixabayList came from pixabayReducer\r\n        // onSelectedPicture is associated with myCollectionReducer\r\n\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        {pixabayList.pixabayList.hits.map((el, index) => {\r\n                            return(\r\n                                <Col sm={4} key={index}>\r\n                                    <div className=\"pixabayImg-container\">\r\n                                        <img src={el.largeImageURL} className=\"pixabayImg\" alt={index} />\r\n                                        <div className=\"middleImg\">\r\n                                            <Button className=\"pixabayBtn\" variant=\"dark\" onClick={() => onSelectedPicture(el.largeImageURL, el.id)}><i className=\"fa fa-floppy-o\" aria-hidden=\"true\"></i></Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport './style.scss';\r\n\r\nconst MyCollection = ({ myCollection }) => {\r\n    return(\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    {myCollection.map((el, index) => {\r\n                        return(\r\n                            <Col sm={4} key={index}>\r\n                                <div className=\"mycollection-container\">\r\n                                    <img src={el.url} className=\"pixabayImg\" alt={index} />\r\n                                </div>\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyCollection;","/* pixabayReducer */\r\nexport const GET_PICTURES = 'GET_PICTURES';\r\n\r\n/* pixabayMyCollectionReducer */\r\nexport const SELECTED_PICTURES = 'SELECTED_PICTURES';","import axios from 'axios';\r\nimport { GET_PICTURES } from './actions/action';\r\n\r\n/* In order to receive pictures data from Pixabay API, it requires to put the paramAPIKey (From PixabayContainer) */\r\nexport const getPostAPI = (paramContent, paramAPIKey) => {\r\n    return axios.get(`https://pixabay.com/api/?key=${paramAPIKey}&q=${paramContent}`);\r\n};\r\n\r\nexport const getPictures = (content, APIKey) => (dispatch) => {\r\n    return getPostAPI(content, APIKey).then((res) => {\r\n        dispatch( { type : GET_PICTURES, payload : res.data } );\r\n    }).catch((err) => {\r\n        console.log(err);\r\n    });\r\n};\r\n\r\nexport default function pixabayReducer(state = [], action){\r\n    switch(action.type){\r\n        case GET_PICTURES:\r\n            return { pixabayList : action.payload };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};","import { SELECTED_PICTURES } from './actions/action';\r\n\r\nexport const selectedPictures = (selectedPic, selectedId) => {\r\n    return { type : SELECTED_PICTURES, url : selectedPic, id : selectedId };\r\n};\r\n\r\nconst initialMyCollection = {\r\n    data : [\r\n        {\r\n            url : '',\r\n            id : ''\r\n        }\r\n    ]\r\n}\r\n\r\nexport default function pixabayMyCollectionReducer(state = initialMyCollection, action){\r\n    switch(action.type){\r\n        case SELECTED_PICTURES:\r\n\r\n            let repeatedFlag = false;\r\n            // To check whether added data is already exist or not\r\n            // If I use the 'map' method, it will create array\r\n\r\n            for(let i=0; i<state.data.length; i++){\r\n                if(state.data[i].id === action.id){\r\n                    repeatedFlag = true;\r\n                    break; // Once it finds the repeated value, then stop for looping\r\n                }\r\n                else{\r\n                    repeatedFlag = false;\r\n                }\r\n            }\r\n\r\n            if(repeatedFlag === true){\r\n                return { ...state };\r\n            }\r\n            \r\n            else{\r\n                return { ...state, data : state.data.concat({\r\n                    url : action.url,\r\n                    id : action.id\r\n                }) };\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MainContainer from './MainContainer';\r\nimport Pixabay from '../component/Pixabay';\r\nimport MyCollection from '../component/MyCollection';\r\nimport { getPictures } from '../store/modules/pixabay';\r\nimport { selectedPictures } from '../store/modules/mycollection';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport './PixabayContainer.scss';\r\n\r\nclass PixabayContainer extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            search : '',\r\n\r\n            toggle : false,\r\n\r\n            toggleContext : 'My Collection'\r\n        };\r\n\r\n        this.onSelectedSearch = this.onSelectedSearch.bind(this);\r\n        this.setSearch = this.setSearch.bind(this);\r\n        this.keyPress = this.keyPress.bind(this);\r\n        this.onSelectedPicture = this.onSelectedPicture.bind(this);\r\n        this.toggleChange = this.toggleChange.bind(this);\r\n    };\r\n\r\n    // componentDidMount = () => {\r\n    //     const { getAllPictures } = this.props;\r\n    //     getAllPictures();\r\n    // };\r\n\r\n    /* Receive pictures by search content */\r\n    onSelectedSearch = (content) => {\r\n        const { getPictures } = this.props;\r\n        \r\n        /* ################# Insert your Pixabay API Key in second parameter ################# */\r\n        getPictures(content, \"13980351-a4740f26731c474783d4dd29c\");\r\n    };\r\n\r\n    /* Receive the search content from input tag */\r\n    setSearch = (e) => {\r\n        this.setState({\r\n            search : e.target.value\r\n        })\r\n    };\r\n\r\n    /* Enable to use Enter key */\r\n    keyPress = (e) =>{\r\n        if(e.key === 'Enter'){\r\n            this.onSelectedSearch(this.state.search);\r\n        }\r\n    };\r\n\r\n    /* Once the user clicks the pic to save, the function will be called to save pic into my collection with url & id */\r\n    onSelectedPicture = (selectedPic, selectedId) => {\r\n        const { selectedPictures } = this.props;\r\n        selectedPictures(selectedPic, selectedId);\r\n    };\r\n\r\n    /* To convert page (The page will be changed as the value of this.state.toggle */\r\n    toggleChange = () => {\r\n        if(this.state.toggleContext === \"My Collection\"){\r\n            this.setState({\r\n                toggle : !this.state.toggle,\r\n                toggleContext : \"Go To Search\"\r\n            })\r\n        }\r\n        else if(this.state.toggleContext === \"Go To Search\"){\r\n            this.setState({\r\n                toggle : !this.state.toggle,\r\n                toggleContext : \"My Collection\"\r\n            })\r\n        }\r\n    };\r\n\r\n    render(){\r\n\r\n        const { pixabayList, myCollection } = this.props;\r\n        // pixabayList came from pixabayReducer\r\n        // myCollection came from pixabaymyCollectionReducer\r\n\r\n        /* Since myCollection array has initial value (empty), use filter function to abandon first initial value */\r\n        let newMyCollection = myCollection.filter((el) => {\r\n            return el.url !== \"\";\r\n        });\r\n\r\n        return(\r\n            <MainContainer title=\"Pixabay API\">\r\n                <div className=\"pixabayContainer\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm={6} xs={6}>\r\n                                {/* The reason why I use visibility is because it takes up the space although it is invisible */}\r\n                                <div style={{visibility: this.state.toggle ? 'hidden' : 'visible'}}>\r\n                                    <div className=\"form\">\r\n                                        <input className=\"search-box\" name=\"search\" type=\"text\" onChange={this.setSearch} onKeyPress={this.keyPress} autoComplete=\"off\" required />\r\n                                        <label htmlFor=\"search\" className=\"label-search\">\r\n                                            <span className=\"content-search\">Search</span>\r\n                                        </label>\r\n                                        <Button className=\"search-btn\" variant=\"outline-dark\" onClick={() => this.onSelectedSearch(this.state.search)}><i className=\"fa fa-search\" aria-hidden=\"true\"></i></Button>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                            <Col sm={6} xs={6}>\r\n                                <div className=\"btn-section\">\r\n                                    <Button className=\"toggle-btn\" variant=\"outline-dark\" onClick={this.toggleChange}>{this.state.toggleContext}</Button>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <div className=\"result-section\">\r\n                        {pixabayList.length !== 0 && this.state.toggle !== true\r\n                        ?\r\n                        <div>\r\n                            <Pixabay pixabayList={pixabayList} onSelectedPicture={this.onSelectedPicture} />\r\n                        </div>\r\n                        : null}\r\n\r\n                        {this.state.toggle !== false\r\n                        ? <MyCollection myCollection={newMyCollection} />\r\n                        : null}\r\n                    </div>\r\n                </div>\r\n            </MainContainer>\r\n        )\r\n    }\r\n};\r\n\r\n/* pixabayList : Storing pictures once the user search (via Pixabay API) */\r\n/* myCollection : Storing pictures that the user clicks save button */\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pixabayList : state.pixabayReducer,\r\n        myCollection : state.pixabayMyCollectionReducer.data\r\n    };\r\n};\r\n\r\n/* getPictures function came from pixabay.js */\r\n/* selectedPictures function came from mycollection.js */\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getPictures : (content, APIKey) => { dispatch(getPictures(content, APIKey)) },\r\n        selectedPictures : (selectedPic, selectedId) => { dispatch(selectedPictures(selectedPic, selectedId)) }\r\n    };\r\n};\r\n\r\n/* In order to use mapState / mapDispatch within PixabayContainer */\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PixabayContainer);","import React, { Component } from 'react';\nimport PixabayContainer from './container/PixabayContainer';\nimport './App.scss';\n\nexport default class App extends Component{\n  render(){\n    return(\n      <div className=\"app\">\n        <PixabayContainer />\n      </div>\n    )\n  }\n}","import { combineReducers } from 'redux';\r\nimport pixabayReducer from './pixabay';\r\nimport pixabayMyCollectionReducer from './mycollection';\r\n\r\nexport default combineReducers({\r\n    pixabayReducer,\r\n    pixabayMyCollectionReducer\r\n    // Other Reducers ...\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // In order to use Bootstrap\n\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './store/modules/index';\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk'; // Redux Middleware 'Redux Thunk' (In order to use async (axios))\n\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nReactDOM.render(\n<Provider store={store}>\n    <App />    \n</Provider>, document.getElementById('root'));"],"sourceRoot":""}